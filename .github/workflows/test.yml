name: Tests

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  NODE_ENV: test

jobs:
  client-tests:
    name: Client Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22']
    
    defaults:
      run:
        working-directory: ./client
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:run
        working-directory: ./client
      
      - name: Generate coverage report
        run: npm run coverage
        working-directory: ./client
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./client/coverage/cobertura.xml
          flags: client
          name: client-coverage
          fail_ci_if_error: false

  server-tests:
    name: Server Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22']
    
    defaults:
      run:
        working-directory: ./server
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: travelai_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma client
        run: npm run db:generate
      
      - name: Run database migrations
        run: npm run db:push
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/travelai_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.TRAVELAI_CHAT_KEY }}
      
      - name: Run tests
        run: npm run test:run
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/travelai_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.TRAVELAI_CHAT_KEY }}
      
      - name: Generate coverage report
        run: npm run coverage
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/travelai_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.TRAVELAI_CHAT_KEY }}
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./server/coverage/cobertura.xml
          flags: server
          name: server-coverage
          fail_ci_if_error: false

  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint all workspaces
        run: npm run lint
      
      - name: Type check client
        run: npm run type-check
        working-directory: ./client
      
      - name: Type check server
        run: npm run type-check
        working-directory: ./server

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma client
        run: npm run db:generate
        working-directory: ./server
      
      - name: Build client
        run: npm run build:client
      
      - name: Build server
        run: npm run build
        working-directory: ./server
      
      - name: Upload client build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist/
          retention-days: 1
      
      - name: Upload server build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server-build
          path: server/dist/
          retention-days: 1

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [client-tests, server-tests, lint-and-typecheck, build-check]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.client-tests.result }}" == "success" && "${{ needs.server-tests.result }}" == "success" && "${{ needs.lint-and-typecheck.result }}" == "success" && "${{ needs.build-check.result }}" == "success" ]]; then
            echo "✅ All checks passed!"
            exit 0
          else
            echo "❌ Some checks failed:"
            echo "Client tests: ${{ needs.client-tests.result }}"
            echo "Server tests: ${{ needs.server-tests.result }}"
            echo "Lint & Type check: ${{ needs.lint-and-typecheck.result }}"
            echo "Build check: ${{ needs.build-check.result }}"
            exit 1
          fi