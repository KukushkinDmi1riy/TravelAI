import { useState } from 'react';
import { Stack, Title, Group, Space, Code, Divider } from '@mantine/core';
import { Button, Badge, Avatar, ProgressBar } from '../../atoms';
import { Card } from '../../molecules';

export const MantineDemo = () => {
  const [progress, setProgress] = useState(65);
  const [loading, setLoading] = useState(false);

  const handleLoadingDemo = () => {
    setLoading(true);
    setTimeout(() => setLoading(false), 2000);
  };

  return (
    <div style={{ padding: '2rem', maxWidth: '1200px', margin: '0 auto' }}>
      <Title order={1} mb="xl">
        üöÄ Mantine + Atomic Design Demo
      </Title>

      {/* Buttons Demo */}
      <Card>
        <Title order={2} size="h3" mb="md">
          ‚öõÔ∏è Button Atoms
        </Title>
        <Stack gap="md">
          <Group>
            <Button variant="primary" size="sm">
              Primary Small
            </Button>
            <Button variant="primary" size="md">
              Primary Medium
            </Button>
            <Button variant="primary" size="lg">
              Primary Large
            </Button>
          </Group>

          <Group>
            <Button variant="secondary">Secondary</Button>
            <Button variant="outline">Outline</Button>
            <Button variant="ghost">Ghost</Button>
          </Group>

          <Group>
            <Button
              variant="primary"
              loading={loading}
              onClick={handleLoadingDemo}
            >
              {loading ? 'Loading...' : 'Test Loading'}
            </Button>
            <Button variant="primary" disabled>
              Disabled
            </Button>
            <Button variant="primary" fullWidth>
              Full Width
            </Button>
          </Group>
        </Stack>

        <Space h="md" />
        <Code block>{`<Button variant="primary" size="md" loading={isLoading}>
  Click me
</Button>`}</Code>
      </Card>

      <Space h="xl" />

      {/* Badges Demo */}
      <Card>
        <Title order={2} size="h3" mb="md">
          üè∑Ô∏è Badge Atoms
        </Title>
        <Stack gap="md">
          <Group>
            <Badge variant="primary" size="sm">
              Primary
            </Badge>
            <Badge variant="secondary" size="sm">
              Secondary
            </Badge>
            <Badge variant="success" size="sm">
              Success
            </Badge>
            <Badge variant="warning" size="sm">
              Warning
            </Badge>
            <Badge variant="info" size="sm">
              Info
            </Badge>
          </Group>

          <Group>
            <Badge variant="primary" size="md">
              Medium
            </Badge>
            <Badge variant="success" size="lg">
              Large
            </Badge>
          </Group>
        </Stack>

        <Space h="md" />
        <Code block>{`<Badge variant="success" size="md">
  Active
</Badge>`}</Code>
      </Card>

      <Space h="xl" />

      {/* Avatars Demo */}
      <Card>
        <Title order={2} size="h3" mb="md">
          üë§ Avatar Atoms
        </Title>
        <Stack gap="md">
          <Group>
            <Avatar size="sm" initials="SM" />
            <Avatar size="md" initials="MD" />
            <Avatar size="lg" initials="LG" />
            <Avatar size="xl" initials="XL" />
          </Group>

          <Group>
            <Avatar
              size="lg"
              src="https://images.unsplash.com/photo-1494790108755-2616b612b1-3?w=64&h=64&fit=crop&crop=face"
              alt="User Avatar"
            />
            <Avatar size="lg" initials="–ê–ö" />
          </Group>
        </Stack>

        <Space h="md" />
        <Code block>{`<Avatar size="lg" initials="–ê–ö" />
<Avatar size="lg" src="path/to/image.jpg" />`}</Code>
      </Card>

      <Space h="xl" />

      {/* Progress Demo */}
      <Card>
        <Title order={2} size="h3" mb="md">
          üìä ProgressBar Atoms
        </Title>
        <Stack gap="md">
          <div>
            <Group mb="xs">
              <Button
                size="sm"
                onClick={() => setProgress(Math.max(0, progress - 10))}
              >
                -10%
              </Button>
              <Button
                size="sm"
                onClick={() => setProgress(Math.min(100, progress + 10))}
              >
                +10%
              </Button>
              <span>–¢–µ–∫—É—â–∏–π: {progress}%</span>
            </Group>

            <ProgressBar value={progress} max={100} color="primary" showLabel />
          </div>

          <div>
            <ProgressBar value={75} max={100} color="success" size="sm" />
            <Space h="xs" />
            <ProgressBar value={50} max={100} color="warning" size="md" />
            <Space h="xs" />
            <ProgressBar value={25} max={100} color="info" size="lg" />
          </div>
        </Stack>

        <Space h="md" />
        <Code block>{`<ProgressBar 
  value={75} 
  max={100} 
  color="primary" 
  showLabel 
/>`}</Code>
      </Card>

      <Space h="xl" />

      {/* Cards Demo */}
      <Card>
        <Title order={2} size="h3" mb="md">
          üÉè Card Molecules
        </Title>
        <Stack gap="md">
          <Group align="flex-start">
            <Card variant="default" style={{ width: 200 }}>
              <Title order={4} size="h5">
                Default Card
              </Title>
              <p>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –±–∞–∑–æ–≤–æ–π —Ç–µ–Ω—å—é</p>
            </Card>

            <Card variant="elevated" style={{ width: 200 }}>
              <Title order={4} size="h5">
                Elevated Card
              </Title>
              <p>–ü—Ä–∏–ø–æ–¥–Ω—è—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –±–æ–ª—å—à–µ–π —Ç–µ–Ω—å—é</p>
            </Card>

            <Card variant="outlined" style={{ width: 200 }}>
              <Title order={4} size="h5">
                Outlined Card
              </Title>
              <p>–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –≥—Ä–∞–Ω–∏—Ü–µ–π –±–µ–∑ —Ç–µ–Ω–∏</p>
            </Card>
          </Group>
        </Stack>

        <Space h="md" />
        <Code block>{`<Card variant="elevated">
  <Title>Card Title</Title>
  <p>Card content...</p>
</Card>`}</Code>
      </Card>

      <Space h="xl" />

      {/* Integration Demo */}
      <Card variant="elevated">
        <Title order={2} size="h3" mb="md">
          üéØ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        </Title>
        <p>–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤–º–µ—Å—Ç–µ:</p>

        <Divider my="md" />

        <Group mb="md">
          <Avatar size="md" initials="–î–ö" />
          <div>
            <Title order={4} size="h5">
              –î–º–∏—Ç—Ä–∏–π –ö—É–∫—É—à–∫–∏–Ω
            </Title>
            <Badge variant="success" size="sm">
              –û–Ω–ª–∞–π–Ω
            </Badge>
          </div>
        </Group>

        <p>–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è:</p>
        <ProgressBar value={78} max={100} color="primary" showLabel />

        <Space h="md" />

        <Group>
          <Button variant="primary">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</Button>
          <Button variant="outline">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Button>
        </Group>

        <Space h="md" />
        <Code block>{`// –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç Mantine –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º
// –Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –Ω–∞—à —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API!

<Avatar initials="–î–ö" size="md" />
<Badge variant="success">–û–Ω–ª–∞–π–Ω</Badge>
<ProgressBar value={78} showLabel />
<Button variant="primary">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</Button>`}</Code>
      </Card>

      <Space h="xl" />

      <Card style={{ backgroundColor: '#f8f9fa' }}>
        <Title order={3} ta="center" c="dimmed">
          ‚ú® –¢–µ–ø–µ—Ä—å –≤–∞—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ Mantine! ‚ú®
        </Title>
        <p style={{ textAlign: 'center', color: '#666' }}>
          –¢–æ—Ç –∂–µ API, –Ω–æ —Å –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é –∏
          —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
        </p>
      </Card>
    </div>
  );
};
